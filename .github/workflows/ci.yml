name: vim-themis

on:
  push:
    paths-ignore:
      - "README.md"
      - "doc/*.txt"

jobs:
  themis:
    strategy:
      fail-fast: false
      matrix:
        neovim: [false, true]
        version: ["nightly", "stable"]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: checkout vim-themis
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          repository: thinca/vim-themis
          path: vim-themis
      - name: setup vim
        id: vim
        uses: rhysd/action-setup-vim@2ab97f992520b094d4243cde0d3173493c811799 # v1.3.4
        with:
          neovim: ${{ matrix.neovim }}
          version: ${{ matrix.version }}
      - name: Run test with vim-themis
        env:
          THEMIS_VIM: ${{ steps.vim.outputs.executable }}
          THEMIS_PROFILE: ${{ github.workspace }}/vim-profile-${{ runner.os }}-${{ matrix.neovim }}-${{ matrix.version }}.txt
        run: |
          ${GITHUB_WORKSPACE}/vim-themis/bin/themis --reporter dot
      - name: setup python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: '3.10'
      - name: collect coverage
        env:
          THEMIS_PROFILE: ${{ github.workspace }}/vim-profile-${{ runner.os }}-${{ matrix.neovim }}-${{ matrix.version }}.txt
        run: |
          pip install covimerage
          covimerage write_coverage "${THEMIS_PROFILE}"
          covimerage xml
      - uses: k1LoW/octocov-action@5213913fe329368ab9dafa16f18f4f3cce1062f0 # v1.3.0
      - name: create filename
        id: filename
        run: echo "filename=badge-${{ runner.os }}-$(test \"${{ matrix.neovim }}\" = \"true\" && echo neovim || echo vim )-${{ matrix.version }}.svg" >> "$GITHUB_OUTPUT"
      - name: make covarage badge
        run: |
          octocov badge coverage --out ${{ github.workspace }}/${{ steps.filename.outputs.filename }}
      - name: upload badge to artifact
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          path: ${{ steps.filename.outputs.filename }}
          name: ${{ steps.filename.outputs.filename }}
          if-no-files-found: error

  upload-coverage-badge:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/main')
    needs: themis
    steps:
      - name: download artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          pattern: "*.svg"
      - name: move them into docs
        run: |
          mkdir docs
          mv *.svg docs/
      - name: upload badge to artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: docs

  deploy-to-github-pages:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/main')
    needs: upload-coverage-badge
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
